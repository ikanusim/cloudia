#!/usr/bin/env ruby
require 'optparse'
require 'ostruct'
require '/root/scalarium-agent/vendor/gems/environment'
require 'json'

module Cloudia
  extend self
  @options = OpenStruct.new
  @commands = []

  def roles
    cluster_state = JSON.parse(File.read('/var/lib/scalarium/cluster_state.json'))
    roles = cluster_state['instance']['roles']
    if @options.verbose
      roles = roles.map {|role| cluster_state['roles'][role]['name']}
    end
    puts roles.join(', ')
  end

  def history
    puts `grep -o '"activity":"[^"]\\+"' /root/scalarium-agent/log/chef/*.json`
  end

  def list_custom_recipes
    `find /root/scalarium-agent/site-cookbooks/*/recipes/*.rb`.
      scan(%r(/root/scalarium-agent/site-cookbooks/([^/]+)/recipes/([^.]+)\.rb)).each do |cookbook, recipe|
        puts "#{cookbook}::#{recipe}"
      end
  end

  def update
    `wget -O #{$0} http://github.com/ikanusim/cloudia/raw/master/cloudia`
  end

  @opts = OptionParser.new do |opts|
    opts.banner = "Usage: #{File.basename($0)} [options]"

    opts.on('-r', '--roles', 'List all roles assigned to the current node') do
      @commands.push(:roles)
    end

    opts.on('-h', '--help', 'Display this screen') do
      puts opts
      exit
    end

    opts.on('-H', '--history', 'List history of chef runs') do
      @commands.push(:history)
    end

    opts.on('-l', '--list-custom-recipes', 'List custom recipes') do
      @commands.push(:list_custom_recipes)
    end

    opts.on('-u', '--update', 'Update cloudia') do
      @commands.push(:update)
    end

    opts.on('-v', '--verbose', 'Be verbose') do
      @options.verbose = true
    end
  end

  def execute(args)
    @opts.parse!(args.dup)
    if args.empty?
      puts @opts
      exit
    end
    @commands.each {|command| send(command)}
  end
end

Cloudia.execute(ARGV)
